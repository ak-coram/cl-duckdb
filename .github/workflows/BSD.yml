name: BSD

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.org'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  test:
    name: ${{ matrix.lisp }} (${{ matrix.cffi }}) on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [FreeBSD]
        lisp: [sbcl, ccl, ecl]
        cffi: [default, static]
        arch: [x86_64, aarch64]
        exclude:
          - lisp: sbcl
            cffi: static
          - lisp: ccl
            cffi: static
          - lisp: sbcl
            arch: aarch64
          - lisp: ccl
            arch: aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies & run tests
        uses: vmactions/freebsd-vm@v1
        with:
          release: "15.0"
          usesh: true
          sync: rsync
          copyback: false
          arch: ${{ matrix.arch }}
          prepare: |
            sed 's/quarterly/latest/' /etc/pkg/FreeBSD.conf > /tmp/FreeBSD.conf && mv /tmp/FreeBSD.conf /etc/pkg/
            pkg install -y duckdb wget gcc libffi ${{ matrix.lisp }}
            export PATH=/usr/local/bin/:$PATH
            wget https://beta.quicklisp.org/quicklisp.lisp
            ${{ matrix.lisp }} --load quicklisp.lisp --eval '(quicklisp-quickstart:install)' --eval '(progn (ql-dist:install-dist "http://dist.ultralisp.org/" :prompt nil) (uiop:quit))'
          run: |
            ln -s $(pwd) ~/quicklisp/local-projects/cl-duckdb
            if [ ${{ matrix.cffi }} = 'static' ]; then export CL_DUCKDB_USE_SFFI=t; fi
            ${{ matrix.lisp }} --load ~/quicklisp/setup.lisp --eval "(progn (ql:quickload :duckdb/test) (uiop:quit (if (uiop:symbol-call :fiveam '#:run! :duckdb) 0 1)))"
