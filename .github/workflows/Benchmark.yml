name: Benchmark

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }} with duckdb ${{ matrix.duckdb }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        lisp: [sbcl-bin, ccl-bin/1.12.1, ecl/21.2.1]
        os: [ubuntu-latest]
        duckdb: [0.8.0]
    env:
      LISP: ${{ matrix.lisp }}
      DUCKDB_VERSION: ${{ matrix.duckdb }}
    steps:
      - uses: actions/checkout@v3

      - name: Install DuckDB
        shell: bash
        run: |
          aria2c "https://github.com/duckdb/duckdb/releases/download/v${DUCKDB_VERSION}/libduckdb-linux-amd64.zip"
          unzip libduckdb-linux-amd64.zip -d .

      - name: Setup Lisp
        continue-on-error: true
        uses: 40ants/setup-lisp@v2
        with:
          qlfile-template: |
            dist ultralisp http://dist.ultralisp.org

      - name: Run benchmarks
        shell: bash
        run: |
          export LD_LIBRARY_PATH=./
          export CL_DUCKDB_USE_SFFI=t
          export CL_DUCKDB_LIBRARY_PATH="${{ github.workspace }}"
          ros run --eval '(progn (ql:quickload :duckdb/benchmark) (asdf:test-system :duckdb/benchmark) (quit))'
